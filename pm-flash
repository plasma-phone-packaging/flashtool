#!/bin/bash
set -ex

# The job of flashtool is to,
# - detect which device is connected
# - download files for specific device
# - install the recovery
# - install the Plasma rootfs
# - reboot

CACHEDIR=cache

function wait-for-device {
    until adb shell true 2> /dev/null
    do
        sleep 1
    done
}

function confirm() {
# call with a prompt string or use a default
    read -r -p "${1:-Are you sure? [y/N]} " response
        case $response in
        [yY][eE][sS]|[yY])
        true
            ;;
    *)
        false
        ;;
    esac
}

function download() {
    # If no device name was supplied just bail out
    if [ $# -eq 0 ]; then
        echo "No device name was supplied to download, this is fatal error"
        exit 1
    fi

    # Cleanup
    mkdir -p $CACHEDIR/ && pushd $CACHEDIR/
    rm -f *

    # timestamp file for latest images
    if [ "$2" == "neon" ]; then
        wget -c http://neon.plasma-mobile.org/rootfs_stamp
    fi
    if [ "$2" == "arch" ]; then
        wget -c http://neon.plasma-mobile.org/arch_rootfs_stamp
    fi
    wget -c http://neon.plasma-mobile.org/devices/$1/android_stamp -O $1_stamp

    # TWRP recovery
    wget -c http://neon.plasma-mobile.org/devices/$1/recovery.img -O $1_recovery.img
    wget -c http://neon.plasma-mobile.org/devices/$1/`cat $1_stamp`.zip

    # lxc userspace tools
    wget -c http://neon.plasma-mobile.org/lxc-android.tar.gz
    if [ "$2" == "neon" ]; then
        # rootfs for plasma mobile
        wget -c http://neon.plasma-mobile.org/rootfs/pm-rootfs-`cat rootfs_stamp`.tar.gz
        ln -s pm-rootfs-`cat rootfs_stamp`.tar.gz pm-rootfs.tar.gz
    fi
    if [ "$2" == "arch" ]; then
        # rootfs for plasma mobile
        wget -c http://neon.plasma-mobile.org/rootfs/arch/pm-arch-rootfs-`cat arch_rootfs_stamp`.tar.gz
        ln -s pm-arch-rootfs-`cat arch_rootfs_stamp`.tar.gz pm-rootfs.tar.gz
    fi

    # udev rules specific to device
    wget -c http://neon.plasma-mobile.org/devices/$1/55-$1.rules
    # config for lxc container
    wget -c https://raw.githubusercontent.com/plasma-phone-packaging/CM/master/lxc-system-config
    popd
}

function flash-phone() {

    # If no device name was supplied just bail out
    if [ $# -eq 0 ]; then
        echo "No device name was supplied to flash, this is fatal error"
        exit 1
    fi

    echo "Flashing recovery"
    fastboot format cache
    fastboot format userdata
    fastboot format recovery
    fastboot format system
    fastboot flash recovery $CACHEDIR/$1_recovery.img
    fastboot boot $CACHEDIR/$1_recovery.img
    wait-for-device

    adb reboot recovery
    wait-for-device

    echo "Installing android base image"
    echo "--update_package=/sdcard/update.zip" > $CACHEDIR/command
    sleep 2
    adb push $CACHEDIR/`cat $CACHEDIR/$1_stamp`.zip /sdcard/update.zip
    sleep 2
    adb push $CACHEDIR/command /cache/recovery/command

    echo "For debugging purpose"
    adb shell mount
    adb shell cat /cache/recovery/command
    adb shell ls /sdcard

    # TODO: FIXME: On Nexus 5X devices, the phone will attempt to boot
    # (CONT'D) into the OS.
    adb reboot recovery
    sleep 10
    wait-for-device
    adb reboot bootloader
    fastboot boot $CACHEDIR/$1_recovery.img

    echo "Done flashing android, now flashing rootfs and lxc"
}

function plasmafy(){

    wait-for-device

    echo "Installing lxc userspace tools"
    adb push $CACHEDIR/lxc-android.tar.gz /data/
    adb shell tar xf /data/lxc-android.tar.gz

    echo "Installing plasma rootfs"
    adb push `readlink -f $CACHEDIR/pm-rootfs.tar.gz` /data/pm-rootfs.tar.gz
    adb shell mkdir -p /data/lxc/containers/system/rootfs/
    adb shell tar xf /data/pm-rootfs.tar.gz -C /data/lxc/containers/system/rootfs/
    adb shell rm /data/pm-rootfs.tar.gz /data/lxc-android.tar.gz
    adb push $CACHEDIR/lxc-system-config /data/lxc/containers/system/config
    adb push $CACHEDIR/55-$1.rules /data/lxc/containers/system/rootfs/etc/udev/rules.d/

    # TODO: FIXME: should not be needed
    adb shell mkdir -p /data/lxc/containers/system/rootfs/sys/fs/cgroup/
    echo "Done flashing, now rebooting into system"
    adb reboot
}



echo "Waiting for device to be in the fastboot mode"
fastboot getvar product

DEVICE_NAME=`fastboot getvar product 2>&1 | head -1 | awk -F': ' '{print $2}'`
confirm "Connected device is $DEVICE_NAME, is that correct? [y/N]" || exit 1

PLATFORM="neon"

echo "Continuing ..."

while getopts "cp:" opt; do
  case $opt in
    c)
	  echo "Option provided to use cache, not downloading files again"
	  NOCACHE=1
      ;;
    p)
      PLATFORM="$OPTARG"
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
  esac
done

if [ -z "$NOCACHE" ]; then
	download $DEVICE_NAME $PLATFORM
    true
fi
flash-phone $DEVICE_NAME
plasmafy $DEVICE_NAME
